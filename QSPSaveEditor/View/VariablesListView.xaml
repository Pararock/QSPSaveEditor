<UserControl x:Class="QSPSaveEditor.View.VariablesListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:QSPSaveEditor.View"
             xmlns:m="clr-namespace:QSPNETWrapper.Model;assembly=QSPNETWrapper"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             mc:Ignorable="d"
             DataContext="{Binding VariablesList, Source={StaticResource Locator}}"
             d:DesignHeight="600"
             d:DesignWidth="800">

    <UserControl.Resources>
        <DataTemplate DataType="{x:Type m:QSPVariable}">
            <DockPanel>
                <TextBlock Text="{Binding Name, Mode=OneWay}"
                           DockPanel.Dock="Left"
                           Width="400"
                           Margin="0,0,20,0" />
                <Grid DockPanel.Dock="Right">
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="singleValueRow">
                            <RowDefinition.Style>
                                <Style TargetType="{x:Type RowDefinition}">
                                    <Setter Property="Height"
                                            Value="1*" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsArray}"
                                                     Value="True">
                                            <Setter Property="Height"
                                                    Value="0" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </RowDefinition.Style>
                        </RowDefinition>
                        <RowDefinition x:Name="arrayRow">
                            <RowDefinition.Style>
                                <Style TargetType="{x:Type RowDefinition}">
                                    <Setter Property="Height"
                                            Value="0" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsArray}"
                                                     Value="True">
                                            <Setter Property="Height"
                                                    Value="1*" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </RowDefinition.Style>
                        </RowDefinition>
                    </Grid.RowDefinitions>
                    <local:QSPVariablesView Grid.Row="0"
                                            DataContext="{Binding Values}" />
                    <StackPanel Grid.Row="1"
                                Orientation="Horizontal"
                                Height="20">
                        <TextBlock>Integer :</TextBlock>
                        <TextBlock Text="{Binding IntegerCount}"></TextBlock>
                        <TextBlock>String :</TextBlock>
                        <TextBlock Text="{Binding StringCount}"></TextBlock>
                        <TextBlock>BothValues :</TextBlock>
                        <TextBlock Text="{Binding BothValuesCount}"></TextBlock>
                        <TextBlock>Total :</TextBlock>
                        <TextBlock Text="{Binding ValuesCount}"></TextBlock>
                    </StackPanel>
                </Grid>
            </DockPanel>
        </DataTemplate>



    </UserControl.Resources>

    <GroupBox Margin="0,0,0,5"
              Header="{Binding VariablesList, Source={StaticResource Locator}}">

        <GroupBox.HeaderTemplate>
            <DataTemplate>
                <DockPanel>
                    <Button DockPanel.Dock="Right"
                            Command="{Binding ResetBaseLineCommand}"
                            ToolTip="Take the values of the second save as baseline for the filter">Reset baseline</Button>
                    <CheckBox DockPanel.Dock="Right"
                              IsChecked="{Binding ModifiedFilter}"
                              IsEnabled="{Binding IsSaveLoaded}"
                              ToolTip="This will filter all the variables that haven't change between the two loaded save">Filter values different than the baseline</CheckBox>
                    <TextBlock  Margin="5">VARIABLES</TextBlock>
                </DockPanel>
            </DataTemplate>
        </GroupBox.HeaderTemplate>

        <DockPanel>


            <TextBox DockPanel.Dock="Bottom"
                     Controls:TextBoxHelper.UseFloatingWatermark="True"
                     IsEnabled="{Binding IsSaveLoaded}"
                     Text="{Binding VariablesFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.InputBindings>
                    <KeyBinding Key="Esc"
                                Command="{Binding ClearFilterCommand}" />
                </TextBox.InputBindings>
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MetroTextBox}"
                           TargetType="{x:Type TextBox}">
                        <Setter Property="Controls:TextBoxHelper.ClearTextButton"
                                Value="True" />
                        <Style.Triggers>
                            <Trigger Property="Controls:TextBoxHelper.HasText"
                                     Value="False">
                                <Setter Property="Controls:TextBoxHelper.ClearTextButton"
                                        Value="False" />
                                <Setter Property="Controls:TextBoxHelper.Watermark"
                                        Value="Enter a variable name to filter the result" />
                            </Trigger>
                            <Trigger Property="Controls:TextBoxHelper.HasText"
                                     Value="True">
                                <Setter Property="Controls:TextBoxHelper.ClearTextButton"
                                        Value="True" />
                                <Setter Property="Controls:TextBoxHelper.Watermark"
                                        Value="Variables filter" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>


            <ListBox x:Name="listBox"
                     HorizontalAlignment="Stretch"
                     ItemsSource="{Binding VariablesView}"
                     IsSynchronizedWithCurrentItem="True"
                     SelectionMode="Single"
                     VirtualizingStackPanel.VirtualizationMode="Recycling"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ScrollViewer.VerticalScrollBarVisibility="Visible"
                     ScrollViewer.IsDeferredScrollingEnabled="False">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <!-- Set a containerstyle to remove a bunch of binding error-->
                        <Setter Property="HorizontalContentAlignment"
                                Value="Stretch" />
                        <Setter Property="VerticalContentAlignment"
                                Value="Center" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsDirty}"
                                         Value="True">
                                <Setter Property="Background"
                                        Value="{DynamicResource ValidationBrush3}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsModified}"
                                         Value="True">
                                <Setter Property="Background"
                                        Value="{DynamicResource ValidationSummaryColor3}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsNew}"
                                         Value="True">
                                <Setter Property="Background"
                                        Value="{DynamicResource ValidationSummaryFillColor2}" />
                            </DataTrigger>
                            <Trigger Property="IsKeyboardFocusWithin"
                                     Value="True">
                                <Setter Property="IsSelected"
                                        Value="True" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </DockPanel>
    </GroupBox>
</UserControl>
